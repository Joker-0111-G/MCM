% 数据输入（各个项目及其评分）
data = [
1, 1, 0.9, 1, 0.85, 1; % 田径
1, 1, 0.85, 1, 0.9, 1; % 游泳
0.8, 1, 0.95, 0.85, 0.75, 1; % 射箭
0.9, 1, 0.85, 0.9, 0.8, 1; % 羽毛球
1, 0.9, 0.8, 1, 0.95, 1; % 篮球
0.8, 0.8, 0.85, 0.75, 0.85, 0.9; % 拳击
0.75, 1, 0.85, 0.8, 0.7, 1; % 皮划艇
1, 0.85, 0.9, 0.9, 0.85, 1; % 自行车
0.7, 1, 0.7, 0.8, 0.8, 0.9; % 马术
0.85, 1, 0.8, 0.85, 0.75, 1; % 击剑
1, 0.9, 0.8, 1, 0.95, 1; % 足球
0.8, 0.9, 0.7, 0.75, 0.6, 0.9; % 高尔夫
1, 1, 0.85, 1, 0.85, 1; % 体操
0.75, 1, 0.85, 0.8, 0.7, 1; % 手球
0.85, 1, 0.8, 0.85, 0.75, 1; % 曲棍球
0.8, 1, 0.85, 0.8, 0.8, 1; % 柔道
0.7, 0.85, 0.75, 0.8, 0.75, 0.9; % 现代五项
0.75, 1, 0.85, 0.85, 0.75, 1; % 赛艇
0.8, 0.9, 0.75, 0.85, 0.8, 1; % 七人制橄榄球
0.7, 1, 0.65, 0.7, 0.65, 1; % 帆船
0.85, 1, 0.9, 0.75, 0.7, 1; % 射击
1, 1, 0.9, 1, 0.9, 1; % 乒乓球
0.9, 1, 0.8, 0.85, 0.75, 1; % 跆拳道
1, 0.9, 0.75, 0.85, 0.85, 1; % 网球
0.8, 1, 0.7, 0.8, 0.75, 1; % 铁人三项
1, 1, 0.8, 1, 0.85, 1; % 排球
0.75, 0.8, 0.85, 0.8, 0.7, 1; % 举重
0.8, 1, 0.85, 0.8, 0.75, 1; % 摔跤
];
% 项目名称
projects = {'田径', '游泳', '射箭', '羽毛球', '篮球', '拳击', '皮划艇', '自行车', '马术', '击剑', ...
'足球', '高尔夫', '体操', '手球', '曲棍球', '柔道', '现代五项', '赛艇', '七人制橄榄球', ...
'帆船', '射击', '乒乓球', '跆拳道', '网球', '铁人三项', '排球', '举重', '摔跤'};
% 标准化评分矩阵（列向量的最大值标准化）
normalized_data = data ./ sqrt(sum(data.^2));
% 计算理想解（最大值）和负理想解（最小值）
ideal_solution = max(normalized_data);
negative_ideal_solution = min(normalized_data);
% 计算每个项目与理想解和负理想解的欧几里得距离
distance_to_ideal = sqrt(sum((normalized_data - ideal_solution).^2, 2));
distance_to_negative_ideal = sqrt(sum((normalized_data - negative_ideal_solution).^2, 2));
% 计算相似度（S+ / (S+ + S-)）
similarity = distance_to_negative_ideal ./ (distance_to_ideal + distance_to_negative_ideal);
% 将相似度和项目名称关联
results = table(projects', similarity, 'VariableNames', {'项目', '相似度'});
% 排序并显示结果
sorted_results = sortrows(results, '相似度', 'descend');
disp(sorted_results);